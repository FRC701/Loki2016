// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "RobotMap.h"
#include "LiveWindow/LiveWindow.h"


//..........chassis..........

std::shared_ptr<CANTalon> RobotMap::chassisLeft1Wheel;
std::shared_ptr<CANTalon> RobotMap::chassisLeft2Wheel;
std::shared_ptr<CANTalon> RobotMap::chassisLeft3Wheel;
std::shared_ptr<CANTalon> RobotMap::chassisRight1Wheel;
std::shared_ptr<CANTalon> RobotMap::chassisRight2Wheel;
std::shared_ptr<CANTalon> RobotMap::chassisRight3Wheel;

std::shared_ptr<DoubleSolenoid> RobotMap::chassisShifter;
std::shared_ptr<DoubleSolenoid> RobotMap::chassisKickstand;

void RobotMap::init() {

    //..........chassis..........

    chassisLeft1Wheel.reset(new CANTalon(kLeft1ID));

    chassisLeft2Wheel.reset(new CANTalon(kLeft2ID));

    chassisLeft3Wheel.reset(new CANTalon(kLeft3ID));

    chassisRight1Wheel.reset(new CANTalon(kRight1ID));

    chassisRight2Wheel.reset(new CANTalon(kRight2ID));

    chassisRight3Wheel.reset(new CANTalon(kRight3ID));

    chassisShifter.reset(new DoubleSolenoid(kShifterF,kShifterR));

}
